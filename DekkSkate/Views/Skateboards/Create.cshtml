@model DekkSkate.Skateboards

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Skateboards", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Skateboards</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Category", (IEnumerable<SelectListItem>)ViewBag.Category, "Select", new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.url, new { htmlAttributes = new { @class = "form-control", type = "file" } })
                @Html.ValidationMessageFor(model => model.url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.stock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.suggest, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.suggest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.suggest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<br />
<br />
<br />
<hr />

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn-back-to-list" })
</div>

<style>
    .form-control {
       max-width: 1000px; /* กำหนดขนาดความกว้างของฟอร์มโดยรวม */
       height: 40px;
    margin: auto; /* จัดให้อยู่กลางหน้า */
        border-radius: 5px;
        border: 2px solid #ff7f00; /* สีส้ม */
        padding: 10px;
        background-color: #f4f4f4; /* สีขาวเทา */
        color: #333;
    }

        .form-control:focus {
            border-color: #ff7f00; /* สีส้ม */
            box-shadow: 0 0 8px rgba(255, 127, 0, 0.8); /* เงาสีส้ม */
        }

    .btn-default {
        background-color: #ff7f00; /* ปุ่มสีส้ม */
        color: #ffffff; /* ข้อความสีขาว */
        padding: 10px 20px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
    }

        .btn-default:hover {
            background-color: #cc6600; /* สีส้มเข้มขึ้นเมื่อโฮเวอร์ */
        }

    h2, h4 {
        color: #000000; /* สีดำ */
    }

    .form-horizontal .form-group label {
        color: #4d4d4d; /* สีเทาเข้ม */
        font-weight: bold;
    }

    .form-horizontal {
        background-color: #ffffff; /* พื้นหลังสีขาว */
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* เงาสีดำอ่อน */
    }

    .col-md-offset-2.col-md-10 {
        text-align: center;
    }

    .btn-back-to-list {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        color: #ffffff;
        background-color: #ff7f00; /* สีส้ม */
        border: 2px solid #ff7f00;
        border-radius: 5px;
        text-decoration: none;
        transition: all 0.3s ease;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* เงา */
    }

        .btn-back-to-list:hover {
            background-color: #cc6600; /* สีส้มเข้มเมื่อโฮเวอร์ */
            color: #ffffff;
            transform: translateY(-2px); /* ยกปุ่มขึ้น */
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2); /* เพิ่มเงา */
        }

        .btn-back-to-list:active {
            transform: translateY(0); /* ลดลงเมื่อกด */
            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
        }
</style>
