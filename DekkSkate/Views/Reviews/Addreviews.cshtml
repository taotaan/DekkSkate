@model DekkSkate.Models.ReviewsViewModel

@{
    ViewBag.Title = "Addreviews";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="d-flex justify-content-center align-items-center vh-100 bg-light">
    <div class="container">
        <h2 class="text-center mb-4">Add a Review</h2>

        @using (Html.BeginForm("Review", "Reviews", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="card shadow-lg">
                <div class="card-body">
                    <div class="row">
                        <!-- Image Section -->
                        <div class="col-md-6 text-center">
                            <img class="img-fluid rounded mb-3" style="max-height: 200px;"
                                 src="@Url.Content("~/Content/images/" + Model.Skateboards_url)" alt="Product Image">
                        </div>

                        
                        <!-- Form Section -->
                        <div class="col-md-6">
                            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                            @Html.HiddenFor(m => m.Email)
                            @Html.HiddenFor(m => m.SkateboardID)

                            <div class="title-bold-text">
                                @Html.DisplayFor(m => m.Skateboards_Brand)
                            </div>

                            <div class="bold-text">
                                $ @Html.DisplayFor(m => m.Skateboards_Price)
                            </div>

                            <div class="norm-text">
                                @Html.DisplayFor(m => m.Skateboards_Description)
                            </div>

                            <hr />

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.rating, "Rating", new { @class = "form-label" })
                                <div class="star-rating">
                                    <input type="radio" id="star5" name="rating" value="5" />
                                    <label for="star5"></label>

                                    <input type="radio" id="star4" name="rating" value="4" />
                                    <label for="star4"></label>

                                    <input type="radio" id="star3" name="rating" value="3" />
                                    <label for="star3"></label>

                                    <input type="radio" id="star2" name="rating" value="2" />
                                    <label for="star2"></label>

                                    <input type="radio" id="star1" name="rating" value="1" />
                                    <label for="star1"></label>
                                </div>

                                @Html.ValidationMessageFor(model => model.rating, "", new { @class = "text-danger" })

                                <!-- Hidden input to send the rating value -->
                                <input type="hidden" name="rating" id="Product_rating" value="5" />
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.comment, "Your Review", new { @class = "form-label" })
                                @Html.TextAreaFor(model => model.comment, new { @class = "form-control", rows = 4 })
                                @Html.ValidationMessageFor(model => model.comment, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>

                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-primary">Submit Review</button>
                    </div>
                </div>
</div>     
        }
        <hr />

        <div class="text-center mt-4">
            @Html.ActionLink("Back to List", "Index","Skateboards", null, new { @class = "btn btn-secondary" })
        </div>
    </div>
</div>

<script>
    document.querySelectorAll('.star-rating input').forEach((radioButton) => {
        radioButton.addEventListener('change', function () {
            var selectedRating = this.value;
            document.getElementById('Product_rating').value = selectedRating; // อัพเดตค่า rating
        });
    });

    document.getElementById('increaseRating').addEventListener('click', function () {
        var ratingLabel = document.getElementById('productRatingLabel');
        var ratingValue = parseInt(ratingLabel.innerText);
        if (ratingValue < 5) {
            ratingLabel.innerText = ratingValue + 1;
        }
    });

    // Update hidden input value before submitting the form
    document.querySelector('form').addEventListener('submit', function () {
        var ratingValue = document.getElementById('productRatingLabel').innerText;
        document.querySelector('[name="rating"]').value = ratingValue;
    });
</script>

<style>
    .title-bold-text {
        font-weight: bold;
        font-size: 25px;
    }

    .bold-text {
        font-weight: bold;
        font-size: 20px;
    }

    .norm-text {
        font-size: 16px;
    }

    .input-group button {
        width: 40px; /* หรือกำหนดขนาดปุ่มตามต้องการ */
    }
    .star-rating {
        direction: rtl; /* ดาวจะเรียงจากขวาไปซ้าย */
        display: inline-block;
    }
    .star-rating {
        direction: rtl; /* ดาวเรียงจากขวาไปซ้าย */
        display: inline-block;
        font-size: 30px;
    }

        .star-rating input[type="radio"] {
            display: none;
        }

        .star-rating label {
            color: #ddd; /* สีเทาเมื่อไม่ได้เลือก */
            cursor: pointer;
            transition: color 0.3s ease-in-out, transform 0.3s ease;
        }

            .star-rating label:hover,
            .star-rating input[type="radio"]:checked ~ label {
                color: #ffbc00; /* สีทองเมื่อเลือกหรือ hover */
                transform: scale(1.2); /* ขยายขนาดดาวเมื่อ hover */
            }

            .star-rating label:before {
                content: "\2605"; /* ใช้ไอคอนดาว */
            }

        .star-rating input[type="radio"]:checked + label {
            color: #ffbc00; /* ดาวที่เลือกจะเป็นสีทอง */
        }

        .star-rating input[type="radio"]:not(:checked) + label:hover,
        .star-rating input[type="radio"]:not(:checked):hover ~ label {
            color: #ffae00; /* สีทองอ่อนเมื่อ hover */
        }
</style>